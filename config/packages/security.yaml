security:
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    providers:
        users_in_memory:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        login:
            pattern: ^/login
            stateless: true
            json_login:
                check_path: /login
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        api:
            pattern: ^/api
            stateless: true
            jwt: ~

        refresh_jwt:
            pattern: ^/api/token/refresh$
            stateless: true
            refresh_jwt: ~

        main:
            stateless: true
            provider: users_in_memory
            jwt: ~

            logout:
                path: app_logout
                invalidate_session: true

        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

    access_control:
        # Autoriser l'accès à /login sans authentification
        - { path: ^/login$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        # Autoriser l'accès à /api/token/refresh sans authentification
        - { path: ^/api/token/refresh$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        # Toutes les autres routes nécessitent une authentification JWT

when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4
                time_cost: 3
                memory_cost: 10
