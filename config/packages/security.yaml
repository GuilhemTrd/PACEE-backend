security:
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    providers:
        users_in_memory:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        # Firewall pour le login
        login:
            pattern: ^/login
            stateless: true
            json_login:
                check_path: /login
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
            provider: users_in_memory  # Spécifie explicitement le provider

        # Firewall principal
        main:
            pattern: ^/(?!token/refresh)
            stateless: true
            provider: users_in_memory  # Spécifie explicitement le provider
            jwt: ~

        # Firewall pour les API avec JWT
        api:
            pattern: ^/api
            stateless: true
            jwt: ~

        # Firewall pour le rafraîchissement des tokens JWT
        refresh_jwt:
            pattern: ^/token/refresh$
            stateless: true
            refresh_jwt:
                check_path: /token/refresh
                provider: users_in_memory

            # Configuration du logout
            logout:
                path: /logout
                invalidate_session: true

        # Firewall pour le développement (profiler, assets, etc.)
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

    access_control:
        - { path: ^/login$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/token/refresh$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/, roles: IS_AUTHENTICATED_FULLY, methods: [GET, POST, PUT, DELETE] }

